service:
  name: my-money-manager-api

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-dynamodb-local
  - serverless-offline 

custom:
  dynamodb:
    stages:
      - dev

    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true

    seed:
      all:
        sources:
          - table: my-money-manager-user-dev
            sources: [./offline/seed/users.json]
          - table: my-money-manager-portfolio-dev
            sources: [/offline/seed/portfolios.json]

provider:
  name: aws
  runtime: nodejs10.x
  environment:
    USER_TABLE: 'my-money-manager-user-dev'
    PORTFOLIO_TABLE: 'my-money-manager-portfolio-dev'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PORTFOLIO_TABLE}"
  
functions:
  my-money-manager-api:
    handler: src/server.handler
    events:
      - http:
          method: any
          cors: true
          path: api/{proxy+}
    environment:
      MARKET_DATA_URL: https://sandbox.iexapis.com/stable/{{proxy}}?token={{token}}
      MARKET_DATA_TOKEN: ${env:MARKET_DATA_TOKEN}

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_TABLE}
    PortfolioDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PORTFOLIO_TABLE}
